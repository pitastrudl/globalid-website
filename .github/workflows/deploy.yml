name: Deploy

on:
  push:
    branches:
      - main
    paths:
      - website/**
      - .github/**

  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  upload:
    runs-on: ubuntu-24.04
    # Add a linting job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Assume AWS role
        run: |
          CREDENTIALS=$(aws sts assume-role --role-arn "${{ secrets.AWS_ROLE_ARN }}"  --role-session-name "GitHubActions-${{ github.run_id }}")

          export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')

          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=us-east-1" >> $GITHUB_ENV

      - name: Upload Files to S3
        run: aws s3 sync website/ s3://${{ secrets.AWS_BUCKET }}/ --delete

  invalidate:
    runs-on: ubuntu-24.04
    needs: upload
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2

      - name: Assume AWS role
        run: |
          CREDENTIALS=$(aws sts assume-role --role-arn "${{ secrets.AWS_ROLE_ARN }}"  --role-session-name "GitHubActions-${{ github.run_id }}")

          export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')

          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}" >> $GITHUB_ENV

      - name: Get all changed files and use a space separator in the output
        id: changed-files
        uses: tj-actions/changed-files@v45.0.7
        with:
          separator: " "
          write_output_files: true
          files: |
            website/**

      - name: Check if all_changed_files.txt is empty or missing
        id: check-file
        run: |
          if [ -s ".github/outputs/all_changed_files.txt" ]; then
            echo "FILE_EMPTY=false" >> $GITHUB_ENV
            ls -la .github/outputs/
          else
            echo "FILE_EMPTY=true" >> $GITHUB_ENV
            ls -la .github/outputs/
          fi

      - name: Transform paths (Replace website/ with /) due to different location in s3 bucket
        if: env.FILE_EMPTY == 'false'
        run: |
          sed -i 's#website##g' .github/outputs/all_changed_files.txt

      - name: Invalidate CloudFront cache on changed files or added files
        if: env.FILE_EMPTY == 'false'
        uses: chetan/invalidate-cloudfront-action@v2.4
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          PATHS_FROM: .github/outputs/all_changed_files.txt
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
